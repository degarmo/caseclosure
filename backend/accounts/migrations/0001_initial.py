# Generated by Django 4.2.19 on 2025-08-22 02:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('phone_verified', models.BooleanField(default=False)),
                ('phone_verified_at', models.DateTimeField(blank=True, null=True)),
                ('phone_verification_code', models.CharField(blank=True, max_length=6)),
                ('phone_verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('account_type', models.CharField(choices=[('unverified', 'Unverified User'), ('verified', 'Verified Family Member'), ('helper', 'Community Helper'), ('detective', 'Law Enforcement'), ('advocate', 'Victim Advocate'), ('admin', 'Administrator')], default='unverified', max_length=20)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(default='US', max_length=2)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='AccountRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('relation', models.CharField(blank=True, help_text='Relationship to case', max_length=100)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(help_text='Why do you need an account? Relationship to victim?')),
                ('supporting_links', models.TextField(blank=True, help_text='News articles, obituaries, etc.')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Account Created')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('verification_code', models.CharField(blank=True, max_length=6)),
                ('verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('verification_attempts', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Account Request',
                'verbose_name_plural': 'Account Requests',
                'db_table': 'account_requests',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('role', models.CharField(blank=True, help_text='Relationship to case (e.g. Family, Detective, Advocate)', max_length=100)),
                ('bio', models.TextField(blank=True, help_text='Your story, connection, or reason for joining')),
                ('location', models.CharField(blank=True, max_length=255)),
                ('preferred_contact', models.CharField(blank=True, choices=[('email', 'Email'), ('phone', 'Phone'), ('both', 'Both')], default='email', max_length=20)),
                ('notifications_tips', models.BooleanField(default=True)),
                ('notifications_updates', models.BooleanField(default=True)),
                ('timezone', models.CharField(blank=True, max_length=50)),
                ('language', models.CharField(blank=True, max_length=30)),
                ('other_language', models.CharField(blank=True, help_text="Specify if language is 'Other'", max_length=50)),
                ('verified', models.BooleanField(default=False)),
                ('account_type', models.CharField(choices=[('basic', 'Basic Account'), ('verified', 'Verified Family'), ('detective', 'Law Enforcement'), ('advocate', 'Victim Advocate'), ('admin', 'Administrator')], default='basic', help_text='Determines access level and permissions', max_length=20)),
                ('phone_verified', models.BooleanField(default=False)),
                ('phone_verified_at', models.DateTimeField(blank=True, null=True)),
                ('can_create_cases', models.BooleanField(default=False)),
                ('max_cases', models.IntegerField(default=1, help_text='Maximum number of cases user can create')),
                ('current_cases', models.IntegerField(default=0, help_text='Current number of active cases')),
                ('identity_verified', models.BooleanField(default=False)),
                ('identity_verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_documents', models.JSONField(blank=True, default=dict, help_text='Stored verification documents/links')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True)),
                ('flagged_at', models.DateTimeField(blank=True, null=True)),
                ('account_request', models.ForeignKey(blank=True, help_text='Original account request', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.accountrequest')),
                ('flagged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flagged_profiles', to=settings.AUTH_USER_MODEL)),
                ('identity_verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_mode', models.CharField(choices=[('invite_only', 'Invite Only (Beta)'), ('open', 'Open Registration'), ('closed', 'Registration Closed')], default='invite_only', help_text='Control how users can register', max_length=20)),
                ('beta_message', models.TextField(blank=True, default='CaseClosure is currently in invite-only beta. Please request an invite to join.', help_text='Message shown when registration is restricted')),
                ('max_users', models.IntegerField(default=0, help_text='Maximum users allowed (0 = unlimited)')),
                ('current_user_count', models.IntegerField(default=0)),
                ('send_welcome_email', models.BooleanField(default=True)),
                ('auto_approve_requests', models.BooleanField(default=False, help_text='Automatically approve account requests')),
                ('enable_google_auth', models.BooleanField(default=False, help_text='Allow Google OAuth registration/login')),
                ('enable_case_creation', models.BooleanField(default=True)),
                ('enable_public_pages', models.BooleanField(default=True)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
                'db_table': 'site_settings',
            },
        ),
        migrations.CreateModel(
            name='InviteCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='8-character invite code', max_length=8, unique=True)),
                ('email', models.EmailField(blank=True, help_text='Optional: restrict to specific email', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_uses', models.IntegerField(default=1, help_text='Maximum number of times this code can be used')),
                ('current_uses', models.IntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date', null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this invite')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invites', to=settings.AUTH_USER_MODEL)),
                ('used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_invite', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invite Code',
                'verbose_name_plural': 'Invite Codes',
                'db_table': 'invite_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='accountrequest',
            name='invite_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_request', to='accounts.invitecode'),
        ),
        migrations.AddField(
            model_name='accountrequest',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL),
        ),
    ]
