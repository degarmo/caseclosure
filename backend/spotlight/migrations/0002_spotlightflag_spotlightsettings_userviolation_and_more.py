# Generated by Django 4.2.19 on 2025-09-24 23:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('spotlight', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpotlightFlag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('inappropriate', 'Inappropriate Content'), ('harassment', 'Harassment'), ('misinformation', 'Misinformation'), ('copyright', 'Copyright Violation'), ('hate_speech', 'Hate Speech'), ('violence', 'Violence'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('action_taken', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SpotlightSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_moderation_enabled', models.BooleanField(default=True)),
                ('spam_keywords', models.JSONField(default=list)),
                ('blocked_domains', models.JSONField(default=list)),
                ('min_account_age_days', models.PositiveIntegerField(default=1)),
                ('max_posts_per_hour', models.PositiveIntegerField(default=10)),
                ('max_posts_per_day', models.PositiveIntegerField(default=50)),
                ('require_case_association', models.BooleanField(default=False)),
                ('require_email_verification', models.BooleanField(default=True)),
                ('community_guidelines', models.TextField(blank=True)),
                ('profanity_filter_enabled', models.BooleanField(default=True)),
                ('ai_moderation_enabled', models.BooleanField(default=False)),
                ('trust_score_threshold', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Spotlight Settings',
            },
        ),
        migrations.CreateModel(
            name='UserViolation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('violation_type', models.CharField(choices=[('spam', 'Spam'), ('harassment', 'Harassment'), ('hate_speech', 'Hate Speech'), ('misinformation', 'Misinformation'), ('ban_evasion', 'Ban Evasion'), ('multiple_violations', 'Multiple Violations'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField()),
                ('action_taken', models.CharField(choices=[('warning', 'Warning'), ('content_removal', 'Content Removal'), ('temporary_suspension', 'Temporary Suspension'), ('permanent_ban', 'Permanent Ban')], max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='spotlightpost',
            name='is_flagged',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='spotlightpost',
            name='moderation_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='spotlightpost',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('published', 'Published'), ('archived', 'Archived'), ('flagged', 'Flagged'), ('removed', 'Removed')], default='draft', max_length=20),
        ),
        migrations.AddIndex(
            model_name='spotlightpost',
            index=models.Index(fields=['is_flagged', 'status'], name='spotlight_s_is_flag_dd741d_idx'),
        ),
        migrations.AddField(
            model_name='userviolation',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='violations_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userviolation',
            name='related_post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='spotlight.spotlightpost'),
        ),
        migrations.AddField(
            model_name='userviolation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='spotlightflag',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='spotlight.spotlightpost'),
        ),
        migrations.AddField(
            model_name='spotlightflag',
            name='reported_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags_reported', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='spotlightflag',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flags_resolved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='spotlightflag',
            unique_together={('post', 'reported_by')},
        ),
    ]
